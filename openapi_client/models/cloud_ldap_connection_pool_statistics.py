# coding: utf-8

"""
    Jamf Pro API

    ## Overview This is a sample Jamf Pro server which allows for usage without any authentication. The Jamf Pro environment which supports the Try it Out functionality does not run the current beta version of Jamf Pro, thus any newly added endpoints will result in an error and should be used soley for documentation purposes.   # noqa: E501

    The version of the OpenAPI document: 10.25.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class CloudLdapConnectionPoolStatistics(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'num_connections_closed_defunct': 'float',
        'num_connections_closed_expired': 'float',
        'num_connections_closed_unneeded': 'float',
        'num_failed_checkouts': 'float',
        'num_failed_connection_attempts': 'float',
        'num_released_valid': 'float',
        'num_successful_checkouts': 'float',
        'num_successful_checkouts_new_connection': 'float',
        'num_successful_connection_attempts': 'float',
        'maximum_available_connections': 'float',
        'num_successful_checkouts_without_wait': 'float',
        'num_successful_checkouts_after_wait': 'float',
        'num_available_connections': 'float'
    }

    attribute_map = {
        'num_connections_closed_defunct': 'numConnectionsClosedDefunct',
        'num_connections_closed_expired': 'numConnectionsClosedExpired',
        'num_connections_closed_unneeded': 'numConnectionsClosedUnneeded',
        'num_failed_checkouts': 'numFailedCheckouts',
        'num_failed_connection_attempts': 'numFailedConnectionAttempts',
        'num_released_valid': 'numReleasedValid',
        'num_successful_checkouts': 'numSuccessfulCheckouts',
        'num_successful_checkouts_new_connection': 'numSuccessfulCheckoutsNewConnection',
        'num_successful_connection_attempts': 'numSuccessfulConnectionAttempts',
        'maximum_available_connections': 'maximumAvailableConnections',
        'num_successful_checkouts_without_wait': 'numSuccessfulCheckoutsWithoutWait',
        'num_successful_checkouts_after_wait': 'numSuccessfulCheckoutsAfterWait',
        'num_available_connections': 'numAvailableConnections'
    }

    def __init__(self, num_connections_closed_defunct=None, num_connections_closed_expired=None, num_connections_closed_unneeded=None, num_failed_checkouts=None, num_failed_connection_attempts=None, num_released_valid=None, num_successful_checkouts=None, num_successful_checkouts_new_connection=None, num_successful_connection_attempts=None, maximum_available_connections=None, num_successful_checkouts_without_wait=None, num_successful_checkouts_after_wait=None, num_available_connections=None, local_vars_configuration=None):  # noqa: E501
        """CloudLdapConnectionPoolStatistics - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._num_connections_closed_defunct = None
        self._num_connections_closed_expired = None
        self._num_connections_closed_unneeded = None
        self._num_failed_checkouts = None
        self._num_failed_connection_attempts = None
        self._num_released_valid = None
        self._num_successful_checkouts = None
        self._num_successful_checkouts_new_connection = None
        self._num_successful_connection_attempts = None
        self._maximum_available_connections = None
        self._num_successful_checkouts_without_wait = None
        self._num_successful_checkouts_after_wait = None
        self._num_available_connections = None
        self.discriminator = None

        if num_connections_closed_defunct is not None:
            self.num_connections_closed_defunct = num_connections_closed_defunct
        if num_connections_closed_expired is not None:
            self.num_connections_closed_expired = num_connections_closed_expired
        if num_connections_closed_unneeded is not None:
            self.num_connections_closed_unneeded = num_connections_closed_unneeded
        if num_failed_checkouts is not None:
            self.num_failed_checkouts = num_failed_checkouts
        if num_failed_connection_attempts is not None:
            self.num_failed_connection_attempts = num_failed_connection_attempts
        if num_released_valid is not None:
            self.num_released_valid = num_released_valid
        if num_successful_checkouts is not None:
            self.num_successful_checkouts = num_successful_checkouts
        if num_successful_checkouts_new_connection is not None:
            self.num_successful_checkouts_new_connection = num_successful_checkouts_new_connection
        if num_successful_connection_attempts is not None:
            self.num_successful_connection_attempts = num_successful_connection_attempts
        if maximum_available_connections is not None:
            self.maximum_available_connections = maximum_available_connections
        if num_successful_checkouts_without_wait is not None:
            self.num_successful_checkouts_without_wait = num_successful_checkouts_without_wait
        if num_successful_checkouts_after_wait is not None:
            self.num_successful_checkouts_after_wait = num_successful_checkouts_after_wait
        if num_available_connections is not None:
            self.num_available_connections = num_available_connections

    @property
    def num_connections_closed_defunct(self):
        """Gets the num_connections_closed_defunct of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_connections_closed_defunct of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_connections_closed_defunct

    @num_connections_closed_defunct.setter
    def num_connections_closed_defunct(self, num_connections_closed_defunct):
        """Sets the num_connections_closed_defunct of this CloudLdapConnectionPoolStatistics.


        :param num_connections_closed_defunct: The num_connections_closed_defunct of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_connections_closed_defunct: float
        """

        self._num_connections_closed_defunct = num_connections_closed_defunct

    @property
    def num_connections_closed_expired(self):
        """Gets the num_connections_closed_expired of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_connections_closed_expired of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_connections_closed_expired

    @num_connections_closed_expired.setter
    def num_connections_closed_expired(self, num_connections_closed_expired):
        """Sets the num_connections_closed_expired of this CloudLdapConnectionPoolStatistics.


        :param num_connections_closed_expired: The num_connections_closed_expired of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_connections_closed_expired: float
        """

        self._num_connections_closed_expired = num_connections_closed_expired

    @property
    def num_connections_closed_unneeded(self):
        """Gets the num_connections_closed_unneeded of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_connections_closed_unneeded of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_connections_closed_unneeded

    @num_connections_closed_unneeded.setter
    def num_connections_closed_unneeded(self, num_connections_closed_unneeded):
        """Sets the num_connections_closed_unneeded of this CloudLdapConnectionPoolStatistics.


        :param num_connections_closed_unneeded: The num_connections_closed_unneeded of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_connections_closed_unneeded: float
        """

        self._num_connections_closed_unneeded = num_connections_closed_unneeded

    @property
    def num_failed_checkouts(self):
        """Gets the num_failed_checkouts of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_failed_checkouts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_failed_checkouts

    @num_failed_checkouts.setter
    def num_failed_checkouts(self, num_failed_checkouts):
        """Sets the num_failed_checkouts of this CloudLdapConnectionPoolStatistics.


        :param num_failed_checkouts: The num_failed_checkouts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_failed_checkouts: float
        """

        self._num_failed_checkouts = num_failed_checkouts

    @property
    def num_failed_connection_attempts(self):
        """Gets the num_failed_connection_attempts of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_failed_connection_attempts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_failed_connection_attempts

    @num_failed_connection_attempts.setter
    def num_failed_connection_attempts(self, num_failed_connection_attempts):
        """Sets the num_failed_connection_attempts of this CloudLdapConnectionPoolStatistics.


        :param num_failed_connection_attempts: The num_failed_connection_attempts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_failed_connection_attempts: float
        """

        self._num_failed_connection_attempts = num_failed_connection_attempts

    @property
    def num_released_valid(self):
        """Gets the num_released_valid of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_released_valid of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_released_valid

    @num_released_valid.setter
    def num_released_valid(self, num_released_valid):
        """Sets the num_released_valid of this CloudLdapConnectionPoolStatistics.


        :param num_released_valid: The num_released_valid of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_released_valid: float
        """

        self._num_released_valid = num_released_valid

    @property
    def num_successful_checkouts(self):
        """Gets the num_successful_checkouts of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_successful_checkouts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_successful_checkouts

    @num_successful_checkouts.setter
    def num_successful_checkouts(self, num_successful_checkouts):
        """Sets the num_successful_checkouts of this CloudLdapConnectionPoolStatistics.


        :param num_successful_checkouts: The num_successful_checkouts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_successful_checkouts: float
        """

        self._num_successful_checkouts = num_successful_checkouts

    @property
    def num_successful_checkouts_new_connection(self):
        """Gets the num_successful_checkouts_new_connection of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_successful_checkouts_new_connection of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_successful_checkouts_new_connection

    @num_successful_checkouts_new_connection.setter
    def num_successful_checkouts_new_connection(self, num_successful_checkouts_new_connection):
        """Sets the num_successful_checkouts_new_connection of this CloudLdapConnectionPoolStatistics.


        :param num_successful_checkouts_new_connection: The num_successful_checkouts_new_connection of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_successful_checkouts_new_connection: float
        """

        self._num_successful_checkouts_new_connection = num_successful_checkouts_new_connection

    @property
    def num_successful_connection_attempts(self):
        """Gets the num_successful_connection_attempts of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_successful_connection_attempts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_successful_connection_attempts

    @num_successful_connection_attempts.setter
    def num_successful_connection_attempts(self, num_successful_connection_attempts):
        """Sets the num_successful_connection_attempts of this CloudLdapConnectionPoolStatistics.


        :param num_successful_connection_attempts: The num_successful_connection_attempts of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_successful_connection_attempts: float
        """

        self._num_successful_connection_attempts = num_successful_connection_attempts

    @property
    def maximum_available_connections(self):
        """Gets the maximum_available_connections of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The maximum_available_connections of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._maximum_available_connections

    @maximum_available_connections.setter
    def maximum_available_connections(self, maximum_available_connections):
        """Sets the maximum_available_connections of this CloudLdapConnectionPoolStatistics.


        :param maximum_available_connections: The maximum_available_connections of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type maximum_available_connections: float
        """

        self._maximum_available_connections = maximum_available_connections

    @property
    def num_successful_checkouts_without_wait(self):
        """Gets the num_successful_checkouts_without_wait of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_successful_checkouts_without_wait of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_successful_checkouts_without_wait

    @num_successful_checkouts_without_wait.setter
    def num_successful_checkouts_without_wait(self, num_successful_checkouts_without_wait):
        """Sets the num_successful_checkouts_without_wait of this CloudLdapConnectionPoolStatistics.


        :param num_successful_checkouts_without_wait: The num_successful_checkouts_without_wait of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_successful_checkouts_without_wait: float
        """

        self._num_successful_checkouts_without_wait = num_successful_checkouts_without_wait

    @property
    def num_successful_checkouts_after_wait(self):
        """Gets the num_successful_checkouts_after_wait of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_successful_checkouts_after_wait of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_successful_checkouts_after_wait

    @num_successful_checkouts_after_wait.setter
    def num_successful_checkouts_after_wait(self, num_successful_checkouts_after_wait):
        """Sets the num_successful_checkouts_after_wait of this CloudLdapConnectionPoolStatistics.


        :param num_successful_checkouts_after_wait: The num_successful_checkouts_after_wait of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_successful_checkouts_after_wait: float
        """

        self._num_successful_checkouts_after_wait = num_successful_checkouts_after_wait

    @property
    def num_available_connections(self):
        """Gets the num_available_connections of this CloudLdapConnectionPoolStatistics.  # noqa: E501


        :return: The num_available_connections of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :rtype: float
        """
        return self._num_available_connections

    @num_available_connections.setter
    def num_available_connections(self, num_available_connections):
        """Sets the num_available_connections of this CloudLdapConnectionPoolStatistics.


        :param num_available_connections: The num_available_connections of this CloudLdapConnectionPoolStatistics.  # noqa: E501
        :type num_available_connections: float
        """

        self._num_available_connections = num_available_connections

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CloudLdapConnectionPoolStatistics):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CloudLdapConnectionPoolStatistics):
            return True

        return self.to_dict() != other.to_dict()
