# coding: utf-8

"""
    Jamf Pro API

    ## Overview This is a sample Jamf Pro server which allows for usage without any authentication. The Jamf Pro environment which supports the Try it Out functionality does not run the current beta version of Jamf Pro, thus any newly added endpoints will result in an error and should be used soley for documentation purposes.   # noqa: E501

    The version of the OpenAPI document: 10.25.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ComputerPackageReceipts(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'installed_by_jamf_pro': 'list[str]',
        'installed_by_installer_swu': 'list[str]',
        'cached': 'list[str]'
    }

    attribute_map = {
        'installed_by_jamf_pro': 'installedByJamfPro',
        'installed_by_installer_swu': 'installedByInstallerSwu',
        'cached': 'cached'
    }

    def __init__(self, installed_by_jamf_pro=None, installed_by_installer_swu=None, cached=None, local_vars_configuration=None):  # noqa: E501
        """ComputerPackageReceipts - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._installed_by_jamf_pro = None
        self._installed_by_installer_swu = None
        self._cached = None
        self.discriminator = None

        if installed_by_jamf_pro is not None:
            self.installed_by_jamf_pro = installed_by_jamf_pro
        if installed_by_installer_swu is not None:
            self.installed_by_installer_swu = installed_by_installer_swu
        if cached is not None:
            self.cached = cached

    @property
    def installed_by_jamf_pro(self):
        """Gets the installed_by_jamf_pro of this ComputerPackageReceipts.  # noqa: E501


        :return: The installed_by_jamf_pro of this ComputerPackageReceipts.  # noqa: E501
        :rtype: list[str]
        """
        return self._installed_by_jamf_pro

    @installed_by_jamf_pro.setter
    def installed_by_jamf_pro(self, installed_by_jamf_pro):
        """Sets the installed_by_jamf_pro of this ComputerPackageReceipts.


        :param installed_by_jamf_pro: The installed_by_jamf_pro of this ComputerPackageReceipts.  # noqa: E501
        :type installed_by_jamf_pro: list[str]
        """

        self._installed_by_jamf_pro = installed_by_jamf_pro

    @property
    def installed_by_installer_swu(self):
        """Gets the installed_by_installer_swu of this ComputerPackageReceipts.  # noqa: E501


        :return: The installed_by_installer_swu of this ComputerPackageReceipts.  # noqa: E501
        :rtype: list[str]
        """
        return self._installed_by_installer_swu

    @installed_by_installer_swu.setter
    def installed_by_installer_swu(self, installed_by_installer_swu):
        """Sets the installed_by_installer_swu of this ComputerPackageReceipts.


        :param installed_by_installer_swu: The installed_by_installer_swu of this ComputerPackageReceipts.  # noqa: E501
        :type installed_by_installer_swu: list[str]
        """

        self._installed_by_installer_swu = installed_by_installer_swu

    @property
    def cached(self):
        """Gets the cached of this ComputerPackageReceipts.  # noqa: E501


        :return: The cached of this ComputerPackageReceipts.  # noqa: E501
        :rtype: list[str]
        """
        return self._cached

    @cached.setter
    def cached(self, cached):
        """Sets the cached of this ComputerPackageReceipts.


        :param cached: The cached of this ComputerPackageReceipts.  # noqa: E501
        :type cached: list[str]
        """

        self._cached = cached

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComputerPackageReceipts):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComputerPackageReceipts):
            return True

        return self.to_dict() != other.to_dict()
