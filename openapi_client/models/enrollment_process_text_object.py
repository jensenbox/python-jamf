# coding: utf-8

"""
    Jamf Pro API

    ## Overview This is a sample Jamf Pro server which allows for usage without any authentication. The Jamf Pro environment which supports the Try it Out functionality does not run the current beta version of Jamf Pro, thus any newly added endpoints will result in an error and should be used soley for documentation purposes.   # noqa: E501

    The version of the OpenAPI document: 10.25.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class EnrollmentProcessTextObject(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'language_code': 'str',
        'name': 'str',
        'title': 'str',
        'login_description': 'str',
        'username': 'str',
        'password': 'str',
        'login_button': 'str',
        'device_class_description': 'str',
        'device_class_personal': 'str',
        'device_class_personal_description': 'str',
        'device_class_enterprise': 'str',
        'device_class_enterprise_description': 'str',
        'device_class_button': 'str',
        'personal_eula': 'str',
        'enterprise_eula': 'str',
        'eula_button': 'str',
        'site_description': 'str',
        'certificate_text': 'str',
        'certificate_button': 'str',
        'certificate_profile_name': 'str',
        'certificate_profile_description': 'str',
        'personal_text': 'str',
        'personal_button': 'str',
        'personal_profile_name': 'str',
        'personal_profile_description': 'str',
        'user_enrollment_text': 'str',
        'user_enrollment_button': 'str',
        'user_enrollment_profile_name': 'str',
        'user_enrollment_profile_description': 'str',
        'enterprise_text': 'str',
        'enterprise_button': 'str',
        'enterprise_profile_name': 'str',
        'enterprise_profile_description': 'str',
        'enterprise_pending': 'str',
        'quick_add_text': 'str',
        'quick_add_button': 'str',
        'quick_add_name': 'str',
        'quick_add_pending': 'str',
        'complete_message': 'str',
        'failed_message': 'str',
        'try_again_button': 'str',
        'check_now_button': 'str',
        'check_enrollment_message': 'str',
        'logout_button': 'str'
    }

    attribute_map = {
        'language_code': 'languageCode',
        'name': 'name',
        'title': 'title',
        'login_description': 'loginDescription',
        'username': 'username',
        'password': 'password',
        'login_button': 'loginButton',
        'device_class_description': 'deviceClassDescription',
        'device_class_personal': 'deviceClassPersonal',
        'device_class_personal_description': 'deviceClassPersonalDescription',
        'device_class_enterprise': 'deviceClassEnterprise',
        'device_class_enterprise_description': 'deviceClassEnterpriseDescription',
        'device_class_button': 'deviceClassButton',
        'personal_eula': 'personalEula',
        'enterprise_eula': 'enterpriseEula',
        'eula_button': 'eulaButton',
        'site_description': 'siteDescription',
        'certificate_text': 'certificateText',
        'certificate_button': 'certificateButton',
        'certificate_profile_name': 'certificateProfileName',
        'certificate_profile_description': 'certificateProfileDescription',
        'personal_text': 'personalText',
        'personal_button': 'personalButton',
        'personal_profile_name': 'personalProfileName',
        'personal_profile_description': 'personalProfileDescription',
        'user_enrollment_text': 'userEnrollmentText',
        'user_enrollment_button': 'userEnrollmentButton',
        'user_enrollment_profile_name': 'userEnrollmentProfileName',
        'user_enrollment_profile_description': 'userEnrollmentProfileDescription',
        'enterprise_text': 'enterpriseText',
        'enterprise_button': 'enterpriseButton',
        'enterprise_profile_name': 'enterpriseProfileName',
        'enterprise_profile_description': 'enterpriseProfileDescription',
        'enterprise_pending': 'enterprisePending',
        'quick_add_text': 'quickAddText',
        'quick_add_button': 'quickAddButton',
        'quick_add_name': 'quickAddName',
        'quick_add_pending': 'quickAddPending',
        'complete_message': 'completeMessage',
        'failed_message': 'failedMessage',
        'try_again_button': 'tryAgainButton',
        'check_now_button': 'checkNowButton',
        'check_enrollment_message': 'checkEnrollmentMessage',
        'logout_button': 'logoutButton'
    }

    def __init__(self, language_code=None, name=None, title=None, login_description=None, username=None, password=None, login_button=None, device_class_description=None, device_class_personal=None, device_class_personal_description=None, device_class_enterprise=None, device_class_enterprise_description=None, device_class_button=None, personal_eula=None, enterprise_eula=None, eula_button=None, site_description=None, certificate_text=None, certificate_button=None, certificate_profile_name=None, certificate_profile_description=None, personal_text=None, personal_button=None, personal_profile_name=None, personal_profile_description=None, user_enrollment_text='Enter your Managed Apple id to install the MDM Profile.', user_enrollment_button='Continue', user_enrollment_profile_name='MDM Profile', user_enrollment_profile_description='MDM Profile for mobile device management', enterprise_text=None, enterprise_button=None, enterprise_profile_name=None, enterprise_profile_description=None, enterprise_pending=None, quick_add_text=None, quick_add_button=None, quick_add_name='QuickAdd.pkg', quick_add_pending=None, complete_message=None, failed_message=None, try_again_button=None, check_now_button=None, check_enrollment_message=None, logout_button=None, local_vars_configuration=None):  # noqa: E501
        """EnrollmentProcessTextObject - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._language_code = None
        self._name = None
        self._title = None
        self._login_description = None
        self._username = None
        self._password = None
        self._login_button = None
        self._device_class_description = None
        self._device_class_personal = None
        self._device_class_personal_description = None
        self._device_class_enterprise = None
        self._device_class_enterprise_description = None
        self._device_class_button = None
        self._personal_eula = None
        self._enterprise_eula = None
        self._eula_button = None
        self._site_description = None
        self._certificate_text = None
        self._certificate_button = None
        self._certificate_profile_name = None
        self._certificate_profile_description = None
        self._personal_text = None
        self._personal_button = None
        self._personal_profile_name = None
        self._personal_profile_description = None
        self._user_enrollment_text = None
        self._user_enrollment_button = None
        self._user_enrollment_profile_name = None
        self._user_enrollment_profile_description = None
        self._enterprise_text = None
        self._enterprise_button = None
        self._enterprise_profile_name = None
        self._enterprise_profile_description = None
        self._enterprise_pending = None
        self._quick_add_text = None
        self._quick_add_button = None
        self._quick_add_name = None
        self._quick_add_pending = None
        self._complete_message = None
        self._failed_message = None
        self._try_again_button = None
        self._check_now_button = None
        self._check_enrollment_message = None
        self._logout_button = None
        self.discriminator = None

        if language_code is not None:
            self.language_code = language_code
        if name is not None:
            self.name = name
        if title is not None:
            self.title = title
        if login_description is not None:
            self.login_description = login_description
        if username is not None:
            self.username = username
        if password is not None:
            self.password = password
        if login_button is not None:
            self.login_button = login_button
        if device_class_description is not None:
            self.device_class_description = device_class_description
        if device_class_personal is not None:
            self.device_class_personal = device_class_personal
        if device_class_personal_description is not None:
            self.device_class_personal_description = device_class_personal_description
        if device_class_enterprise is not None:
            self.device_class_enterprise = device_class_enterprise
        if device_class_enterprise_description is not None:
            self.device_class_enterprise_description = device_class_enterprise_description
        if device_class_button is not None:
            self.device_class_button = device_class_button
        if personal_eula is not None:
            self.personal_eula = personal_eula
        if enterprise_eula is not None:
            self.enterprise_eula = enterprise_eula
        if eula_button is not None:
            self.eula_button = eula_button
        if site_description is not None:
            self.site_description = site_description
        if certificate_text is not None:
            self.certificate_text = certificate_text
        if certificate_button is not None:
            self.certificate_button = certificate_button
        if certificate_profile_name is not None:
            self.certificate_profile_name = certificate_profile_name
        if certificate_profile_description is not None:
            self.certificate_profile_description = certificate_profile_description
        if personal_text is not None:
            self.personal_text = personal_text
        if personal_button is not None:
            self.personal_button = personal_button
        if personal_profile_name is not None:
            self.personal_profile_name = personal_profile_name
        if personal_profile_description is not None:
            self.personal_profile_description = personal_profile_description
        if user_enrollment_text is not None:
            self.user_enrollment_text = user_enrollment_text
        if user_enrollment_button is not None:
            self.user_enrollment_button = user_enrollment_button
        if user_enrollment_profile_name is not None:
            self.user_enrollment_profile_name = user_enrollment_profile_name
        if user_enrollment_profile_description is not None:
            self.user_enrollment_profile_description = user_enrollment_profile_description
        if enterprise_text is not None:
            self.enterprise_text = enterprise_text
        if enterprise_button is not None:
            self.enterprise_button = enterprise_button
        if enterprise_profile_name is not None:
            self.enterprise_profile_name = enterprise_profile_name
        if enterprise_profile_description is not None:
            self.enterprise_profile_description = enterprise_profile_description
        if enterprise_pending is not None:
            self.enterprise_pending = enterprise_pending
        if quick_add_text is not None:
            self.quick_add_text = quick_add_text
        if quick_add_button is not None:
            self.quick_add_button = quick_add_button
        if quick_add_name is not None:
            self.quick_add_name = quick_add_name
        if quick_add_pending is not None:
            self.quick_add_pending = quick_add_pending
        if complete_message is not None:
            self.complete_message = complete_message
        if failed_message is not None:
            self.failed_message = failed_message
        if try_again_button is not None:
            self.try_again_button = try_again_button
        if check_now_button is not None:
            self.check_now_button = check_now_button
        if check_enrollment_message is not None:
            self.check_enrollment_message = check_enrollment_message
        if logout_button is not None:
            self.logout_button = logout_button

    @property
    def language_code(self):
        """Gets the language_code of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The language_code of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this EnrollmentProcessTextObject.


        :param language_code: The language_code of this EnrollmentProcessTextObject.  # noqa: E501
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def name(self):
        """Gets the name of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The name of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EnrollmentProcessTextObject.


        :param name: The name of this EnrollmentProcessTextObject.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def title(self):
        """Gets the title of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The title of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EnrollmentProcessTextObject.


        :param title: The title of this EnrollmentProcessTextObject.  # noqa: E501
        :type title: str
        """

        self._title = title

    @property
    def login_description(self):
        """Gets the login_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The login_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._login_description

    @login_description.setter
    def login_description(self, login_description):
        """Sets the login_description of this EnrollmentProcessTextObject.


        :param login_description: The login_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type login_description: str
        """

        self._login_description = login_description

    @property
    def username(self):
        """Gets the username of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The username of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this EnrollmentProcessTextObject.


        :param username: The username of this EnrollmentProcessTextObject.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def password(self):
        """Gets the password of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The password of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this EnrollmentProcessTextObject.


        :param password: The password of this EnrollmentProcessTextObject.  # noqa: E501
        :type password: str
        """

        self._password = password

    @property
    def login_button(self):
        """Gets the login_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The login_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._login_button

    @login_button.setter
    def login_button(self, login_button):
        """Sets the login_button of this EnrollmentProcessTextObject.


        :param login_button: The login_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type login_button: str
        """

        self._login_button = login_button

    @property
    def device_class_description(self):
        """Gets the device_class_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The device_class_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._device_class_description

    @device_class_description.setter
    def device_class_description(self, device_class_description):
        """Sets the device_class_description of this EnrollmentProcessTextObject.


        :param device_class_description: The device_class_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type device_class_description: str
        """

        self._device_class_description = device_class_description

    @property
    def device_class_personal(self):
        """Gets the device_class_personal of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The device_class_personal of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._device_class_personal

    @device_class_personal.setter
    def device_class_personal(self, device_class_personal):
        """Sets the device_class_personal of this EnrollmentProcessTextObject.


        :param device_class_personal: The device_class_personal of this EnrollmentProcessTextObject.  # noqa: E501
        :type device_class_personal: str
        """

        self._device_class_personal = device_class_personal

    @property
    def device_class_personal_description(self):
        """Gets the device_class_personal_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The device_class_personal_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._device_class_personal_description

    @device_class_personal_description.setter
    def device_class_personal_description(self, device_class_personal_description):
        """Sets the device_class_personal_description of this EnrollmentProcessTextObject.


        :param device_class_personal_description: The device_class_personal_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type device_class_personal_description: str
        """

        self._device_class_personal_description = device_class_personal_description

    @property
    def device_class_enterprise(self):
        """Gets the device_class_enterprise of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The device_class_enterprise of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._device_class_enterprise

    @device_class_enterprise.setter
    def device_class_enterprise(self, device_class_enterprise):
        """Sets the device_class_enterprise of this EnrollmentProcessTextObject.


        :param device_class_enterprise: The device_class_enterprise of this EnrollmentProcessTextObject.  # noqa: E501
        :type device_class_enterprise: str
        """

        self._device_class_enterprise = device_class_enterprise

    @property
    def device_class_enterprise_description(self):
        """Gets the device_class_enterprise_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The device_class_enterprise_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._device_class_enterprise_description

    @device_class_enterprise_description.setter
    def device_class_enterprise_description(self, device_class_enterprise_description):
        """Sets the device_class_enterprise_description of this EnrollmentProcessTextObject.


        :param device_class_enterprise_description: The device_class_enterprise_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type device_class_enterprise_description: str
        """

        self._device_class_enterprise_description = device_class_enterprise_description

    @property
    def device_class_button(self):
        """Gets the device_class_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The device_class_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._device_class_button

    @device_class_button.setter
    def device_class_button(self, device_class_button):
        """Sets the device_class_button of this EnrollmentProcessTextObject.


        :param device_class_button: The device_class_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type device_class_button: str
        """

        self._device_class_button = device_class_button

    @property
    def personal_eula(self):
        """Gets the personal_eula of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The personal_eula of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._personal_eula

    @personal_eula.setter
    def personal_eula(self, personal_eula):
        """Sets the personal_eula of this EnrollmentProcessTextObject.


        :param personal_eula: The personal_eula of this EnrollmentProcessTextObject.  # noqa: E501
        :type personal_eula: str
        """

        self._personal_eula = personal_eula

    @property
    def enterprise_eula(self):
        """Gets the enterprise_eula of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The enterprise_eula of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_eula

    @enterprise_eula.setter
    def enterprise_eula(self, enterprise_eula):
        """Sets the enterprise_eula of this EnrollmentProcessTextObject.


        :param enterprise_eula: The enterprise_eula of this EnrollmentProcessTextObject.  # noqa: E501
        :type enterprise_eula: str
        """

        self._enterprise_eula = enterprise_eula

    @property
    def eula_button(self):
        """Gets the eula_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The eula_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._eula_button

    @eula_button.setter
    def eula_button(self, eula_button):
        """Sets the eula_button of this EnrollmentProcessTextObject.


        :param eula_button: The eula_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type eula_button: str
        """

        self._eula_button = eula_button

    @property
    def site_description(self):
        """Gets the site_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The site_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._site_description

    @site_description.setter
    def site_description(self, site_description):
        """Sets the site_description of this EnrollmentProcessTextObject.


        :param site_description: The site_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type site_description: str
        """

        self._site_description = site_description

    @property
    def certificate_text(self):
        """Gets the certificate_text of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The certificate_text of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._certificate_text

    @certificate_text.setter
    def certificate_text(self, certificate_text):
        """Sets the certificate_text of this EnrollmentProcessTextObject.


        :param certificate_text: The certificate_text of this EnrollmentProcessTextObject.  # noqa: E501
        :type certificate_text: str
        """

        self._certificate_text = certificate_text

    @property
    def certificate_button(self):
        """Gets the certificate_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The certificate_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._certificate_button

    @certificate_button.setter
    def certificate_button(self, certificate_button):
        """Sets the certificate_button of this EnrollmentProcessTextObject.


        :param certificate_button: The certificate_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type certificate_button: str
        """

        self._certificate_button = certificate_button

    @property
    def certificate_profile_name(self):
        """Gets the certificate_profile_name of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The certificate_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._certificate_profile_name

    @certificate_profile_name.setter
    def certificate_profile_name(self, certificate_profile_name):
        """Sets the certificate_profile_name of this EnrollmentProcessTextObject.


        :param certificate_profile_name: The certificate_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :type certificate_profile_name: str
        """

        self._certificate_profile_name = certificate_profile_name

    @property
    def certificate_profile_description(self):
        """Gets the certificate_profile_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The certificate_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._certificate_profile_description

    @certificate_profile_description.setter
    def certificate_profile_description(self, certificate_profile_description):
        """Sets the certificate_profile_description of this EnrollmentProcessTextObject.


        :param certificate_profile_description: The certificate_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type certificate_profile_description: str
        """

        self._certificate_profile_description = certificate_profile_description

    @property
    def personal_text(self):
        """Gets the personal_text of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The personal_text of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._personal_text

    @personal_text.setter
    def personal_text(self, personal_text):
        """Sets the personal_text of this EnrollmentProcessTextObject.


        :param personal_text: The personal_text of this EnrollmentProcessTextObject.  # noqa: E501
        :type personal_text: str
        """

        self._personal_text = personal_text

    @property
    def personal_button(self):
        """Gets the personal_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The personal_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._personal_button

    @personal_button.setter
    def personal_button(self, personal_button):
        """Sets the personal_button of this EnrollmentProcessTextObject.


        :param personal_button: The personal_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type personal_button: str
        """

        self._personal_button = personal_button

    @property
    def personal_profile_name(self):
        """Gets the personal_profile_name of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The personal_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._personal_profile_name

    @personal_profile_name.setter
    def personal_profile_name(self, personal_profile_name):
        """Sets the personal_profile_name of this EnrollmentProcessTextObject.


        :param personal_profile_name: The personal_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :type personal_profile_name: str
        """

        self._personal_profile_name = personal_profile_name

    @property
    def personal_profile_description(self):
        """Gets the personal_profile_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The personal_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._personal_profile_description

    @personal_profile_description.setter
    def personal_profile_description(self, personal_profile_description):
        """Sets the personal_profile_description of this EnrollmentProcessTextObject.


        :param personal_profile_description: The personal_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type personal_profile_description: str
        """

        self._personal_profile_description = personal_profile_description

    @property
    def user_enrollment_text(self):
        """Gets the user_enrollment_text of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The user_enrollment_text of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._user_enrollment_text

    @user_enrollment_text.setter
    def user_enrollment_text(self, user_enrollment_text):
        """Sets the user_enrollment_text of this EnrollmentProcessTextObject.


        :param user_enrollment_text: The user_enrollment_text of this EnrollmentProcessTextObject.  # noqa: E501
        :type user_enrollment_text: str
        """

        self._user_enrollment_text = user_enrollment_text

    @property
    def user_enrollment_button(self):
        """Gets the user_enrollment_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The user_enrollment_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._user_enrollment_button

    @user_enrollment_button.setter
    def user_enrollment_button(self, user_enrollment_button):
        """Sets the user_enrollment_button of this EnrollmentProcessTextObject.


        :param user_enrollment_button: The user_enrollment_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type user_enrollment_button: str
        """

        self._user_enrollment_button = user_enrollment_button

    @property
    def user_enrollment_profile_name(self):
        """Gets the user_enrollment_profile_name of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The user_enrollment_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._user_enrollment_profile_name

    @user_enrollment_profile_name.setter
    def user_enrollment_profile_name(self, user_enrollment_profile_name):
        """Sets the user_enrollment_profile_name of this EnrollmentProcessTextObject.


        :param user_enrollment_profile_name: The user_enrollment_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :type user_enrollment_profile_name: str
        """

        self._user_enrollment_profile_name = user_enrollment_profile_name

    @property
    def user_enrollment_profile_description(self):
        """Gets the user_enrollment_profile_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The user_enrollment_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._user_enrollment_profile_description

    @user_enrollment_profile_description.setter
    def user_enrollment_profile_description(self, user_enrollment_profile_description):
        """Sets the user_enrollment_profile_description of this EnrollmentProcessTextObject.


        :param user_enrollment_profile_description: The user_enrollment_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type user_enrollment_profile_description: str
        """

        self._user_enrollment_profile_description = user_enrollment_profile_description

    @property
    def enterprise_text(self):
        """Gets the enterprise_text of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The enterprise_text of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_text

    @enterprise_text.setter
    def enterprise_text(self, enterprise_text):
        """Sets the enterprise_text of this EnrollmentProcessTextObject.


        :param enterprise_text: The enterprise_text of this EnrollmentProcessTextObject.  # noqa: E501
        :type enterprise_text: str
        """

        self._enterprise_text = enterprise_text

    @property
    def enterprise_button(self):
        """Gets the enterprise_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The enterprise_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_button

    @enterprise_button.setter
    def enterprise_button(self, enterprise_button):
        """Sets the enterprise_button of this EnrollmentProcessTextObject.


        :param enterprise_button: The enterprise_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type enterprise_button: str
        """

        self._enterprise_button = enterprise_button

    @property
    def enterprise_profile_name(self):
        """Gets the enterprise_profile_name of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The enterprise_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_profile_name

    @enterprise_profile_name.setter
    def enterprise_profile_name(self, enterprise_profile_name):
        """Sets the enterprise_profile_name of this EnrollmentProcessTextObject.


        :param enterprise_profile_name: The enterprise_profile_name of this EnrollmentProcessTextObject.  # noqa: E501
        :type enterprise_profile_name: str
        """

        self._enterprise_profile_name = enterprise_profile_name

    @property
    def enterprise_profile_description(self):
        """Gets the enterprise_profile_description of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The enterprise_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_profile_description

    @enterprise_profile_description.setter
    def enterprise_profile_description(self, enterprise_profile_description):
        """Sets the enterprise_profile_description of this EnrollmentProcessTextObject.


        :param enterprise_profile_description: The enterprise_profile_description of this EnrollmentProcessTextObject.  # noqa: E501
        :type enterprise_profile_description: str
        """

        self._enterprise_profile_description = enterprise_profile_description

    @property
    def enterprise_pending(self):
        """Gets the enterprise_pending of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The enterprise_pending of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._enterprise_pending

    @enterprise_pending.setter
    def enterprise_pending(self, enterprise_pending):
        """Sets the enterprise_pending of this EnrollmentProcessTextObject.


        :param enterprise_pending: The enterprise_pending of this EnrollmentProcessTextObject.  # noqa: E501
        :type enterprise_pending: str
        """

        self._enterprise_pending = enterprise_pending

    @property
    def quick_add_text(self):
        """Gets the quick_add_text of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The quick_add_text of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._quick_add_text

    @quick_add_text.setter
    def quick_add_text(self, quick_add_text):
        """Sets the quick_add_text of this EnrollmentProcessTextObject.


        :param quick_add_text: The quick_add_text of this EnrollmentProcessTextObject.  # noqa: E501
        :type quick_add_text: str
        """

        self._quick_add_text = quick_add_text

    @property
    def quick_add_button(self):
        """Gets the quick_add_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The quick_add_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._quick_add_button

    @quick_add_button.setter
    def quick_add_button(self, quick_add_button):
        """Sets the quick_add_button of this EnrollmentProcessTextObject.


        :param quick_add_button: The quick_add_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type quick_add_button: str
        """

        self._quick_add_button = quick_add_button

    @property
    def quick_add_name(self):
        """Gets the quick_add_name of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The quick_add_name of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._quick_add_name

    @quick_add_name.setter
    def quick_add_name(self, quick_add_name):
        """Sets the quick_add_name of this EnrollmentProcessTextObject.


        :param quick_add_name: The quick_add_name of this EnrollmentProcessTextObject.  # noqa: E501
        :type quick_add_name: str
        """

        self._quick_add_name = quick_add_name

    @property
    def quick_add_pending(self):
        """Gets the quick_add_pending of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The quick_add_pending of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._quick_add_pending

    @quick_add_pending.setter
    def quick_add_pending(self, quick_add_pending):
        """Sets the quick_add_pending of this EnrollmentProcessTextObject.


        :param quick_add_pending: The quick_add_pending of this EnrollmentProcessTextObject.  # noqa: E501
        :type quick_add_pending: str
        """

        self._quick_add_pending = quick_add_pending

    @property
    def complete_message(self):
        """Gets the complete_message of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The complete_message of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._complete_message

    @complete_message.setter
    def complete_message(self, complete_message):
        """Sets the complete_message of this EnrollmentProcessTextObject.


        :param complete_message: The complete_message of this EnrollmentProcessTextObject.  # noqa: E501
        :type complete_message: str
        """

        self._complete_message = complete_message

    @property
    def failed_message(self):
        """Gets the failed_message of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The failed_message of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._failed_message

    @failed_message.setter
    def failed_message(self, failed_message):
        """Sets the failed_message of this EnrollmentProcessTextObject.


        :param failed_message: The failed_message of this EnrollmentProcessTextObject.  # noqa: E501
        :type failed_message: str
        """

        self._failed_message = failed_message

    @property
    def try_again_button(self):
        """Gets the try_again_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The try_again_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._try_again_button

    @try_again_button.setter
    def try_again_button(self, try_again_button):
        """Sets the try_again_button of this EnrollmentProcessTextObject.


        :param try_again_button: The try_again_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type try_again_button: str
        """

        self._try_again_button = try_again_button

    @property
    def check_now_button(self):
        """Gets the check_now_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The check_now_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._check_now_button

    @check_now_button.setter
    def check_now_button(self, check_now_button):
        """Sets the check_now_button of this EnrollmentProcessTextObject.


        :param check_now_button: The check_now_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type check_now_button: str
        """

        self._check_now_button = check_now_button

    @property
    def check_enrollment_message(self):
        """Gets the check_enrollment_message of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The check_enrollment_message of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._check_enrollment_message

    @check_enrollment_message.setter
    def check_enrollment_message(self, check_enrollment_message):
        """Sets the check_enrollment_message of this EnrollmentProcessTextObject.


        :param check_enrollment_message: The check_enrollment_message of this EnrollmentProcessTextObject.  # noqa: E501
        :type check_enrollment_message: str
        """

        self._check_enrollment_message = check_enrollment_message

    @property
    def logout_button(self):
        """Gets the logout_button of this EnrollmentProcessTextObject.  # noqa: E501


        :return: The logout_button of this EnrollmentProcessTextObject.  # noqa: E501
        :rtype: str
        """
        return self._logout_button

    @logout_button.setter
    def logout_button(self, logout_button):
        """Sets the logout_button of this EnrollmentProcessTextObject.


        :param logout_button: The logout_button of this EnrollmentProcessTextObject.  # noqa: E501
        :type logout_button: str
        """

        self._logout_button = logout_button

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EnrollmentProcessTextObject):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EnrollmentProcessTextObject):
            return True

        return self.to_dict() != other.to_dict()
