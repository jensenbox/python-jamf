# coding: utf-8

"""
    Jamf Pro API

    ## Overview This is a sample Jamf Pro server which allows for usage without any authentication. The Jamf Pro environment which supports the Try it Out functionality does not run the current beta version of Jamf Pro, thus any newly added endpoints will result in an error and should be used soley for documentation purposes.   # noqa: E501

    The version of the OpenAPI document: 10.25.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.enrollment_process_text_object import EnrollmentProcessTextObject  # noqa: E501
from openapi_client.rest import ApiException

class TestEnrollmentProcessTextObject(unittest.TestCase):
    """EnrollmentProcessTextObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EnrollmentProcessTextObject
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.enrollment_process_text_object.EnrollmentProcessTextObject()  # noqa: E501
        if include_optional :
            return EnrollmentProcessTextObject(
                language_code = 'en', 
                name = 'English', 
                title = 'Enroll Your Device', 
                login_description = 'Log in to enroll your device.', 
                username = 'admin', 
                password = '12345', 
                login_button = 'Log in', 
                device_class_description = 'Specify if this device is institutionally owned or personally owned.', 
                device_class_personal = 'Personally Owned', 
                device_class_personal_description = 'For personally owned devices, IT administrators **can**

         *   Lock the device
         *   Apply institutional settings
         *   Install and remove institutional data
         *   Install and remove institutional apps


         For personally owned devices, IT administrators **cannot**

         *   Wipe all data and settings from your device
         *   Track the location of your device
         *   Remove anything they did not install
         *   Add/remove configuration profiles
         *   Add/remove provisioning profiles
', 
                device_class_enterprise = 'Institutionally Owned', 
                device_class_enterprise_description = 'For institutionally owned devices, IT administrators **can**

         *   Wipe all data and settings from the device
         *   Lock the device
         *   Remove the passcode
         *   Apply institutional settings
         *   Install and remove institutional data
         *   Install and remove institutional apps
         *   Add/remove configuration profiles
         *   Add/remove provisioning profiles

         For institutionally owned devices, IT administrators **cannot**:

         *   Remove anything they did not install
', 
                device_class_button = 'Enroll', 
                personal_eula = 'Personal Eula', 
                enterprise_eula = 'Enterprise Eula', 
                eula_button = 'Accept', 
                site_description = 'Select the site to use for enrolling this computer or mobile device.', 
                certificate_text = 'To continue with enrollment, you need to install the CA certificate for your organization.', 
                certificate_button = 'Continue', 
                certificate_profile_name = 'CA Certificate', 
                certificate_profile_description = 'CA Certificate for mobile device management', 
                personal_text = 'To continue with enrollment, you need to install the MDM profile.', 
                personal_button = 'Enroll', 
                personal_profile_name = 'MDM Profile', 
                personal_profile_description = 'MDM Profile for mobile device management', 
                user_enrollment_text = 'Enter your Managed Apple id to install the MDM Profile.', 
                user_enrollment_button = 'Continue', 
                user_enrollment_profile_name = 'MDM Profile', 
                user_enrollment_profile_description = 'MDM Profile for mobile device management', 
                enterprise_text = 'To continue with enrollment, you need to install the MDM profile for your organization.', 
                enterprise_button = 'Continue', 
                enterprise_profile_name = 'MDM Profile', 
                enterprise_profile_description = 'MDM Profile for mobile device management', 
                enterprise_pending = 'To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.', 
                quick_add_text = 'Download and install this package.', 
                quick_add_button = 'Download', 
                quick_add_name = 'QuickAdd.pkg', 
                quick_add_pending = 'Install the downloaded QuickAdd.pkg.', 
                complete_message = 'The enrollment process is complete.', 
                failed_message = 'The enrollment process could not be completed. Contact your IT administrator.', 
                try_again_button = 'Try Again', 
                check_now_button = 'Proceed', 
                check_enrollment_message = 'Tap "Proceed" to view the enrollment status for this device.', 
                logout_button = 'Log Out'
            )
        else :
            return EnrollmentProcessTextObject(
        )

    def testEnrollmentProcessTextObject(self):
        """Test EnrollmentProcessTextObject"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
