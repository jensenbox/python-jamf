# coding: utf-8

"""
    Jamf Pro API

    ## Overview This is a sample Jamf Pro server which allows for usage without any authentication. The Jamf Pro environment which supports the Try it Out functionality does not run the current beta version of Jamf Pro, thus any newly added endpoints will result in an error and should be used soley for documentation purposes.   # noqa: E501

    The version of the OpenAPI document: 10.25.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import jamf
from jamf.api.api_authentication_api import ApiAuthenticationApi  # noqa: E501
from jamf.rest import ApiException


class TestApiAuthenticationApi(unittest.TestCase):
    """ApiAuthenticationApi unit test stubs"""

    def setUp(self):
        self.api = jamf.api.api_authentication_api.ApiAuthenticationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_auth_current_post(self):
        """Test case for auth_current_post

        Get the authorization details associated with the current API token   # noqa: E501
        """
        pass

    def test_auth_get(self):
        """Test case for auth_get

        Get all the Authorization details associated with the current api   # noqa: E501
        """
        pass

    def test_auth_invalidate_token_post(self):
        """Test case for auth_invalidate_token_post

        Invalidate current token   # noqa: E501
        """
        pass

    def test_auth_keep_alive_post(self):
        """Test case for auth_keep_alive_post

        Invalidate existing token and generates new token   # noqa: E501
        """
        pass

    def test_auth_tokens_post(self):
        """Test case for auth_tokens_post

        Create a token based on other authentication details (basic, etc.)   # noqa: E501
        """
        pass

    def test_v1_auth_get(self):
        """Test case for v1_auth_get

        Get all the Authorization details associated with the current api   # noqa: E501
        """
        pass

    def test_v1_auth_invalidate_token_post(self):
        """Test case for v1_auth_invalidate_token_post

        Invalidate current token   # noqa: E501
        """
        pass

    def test_v1_auth_keep_alive_post(self):
        """Test case for v1_auth_keep_alive_post

        Invalidate existing token and generates new token   # noqa: E501
        """
        pass

    def test_v1_auth_token_post(self):
        """Test case for v1_auth_token_post

        Create a token based on other authentication details (basic, etc.)   # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
