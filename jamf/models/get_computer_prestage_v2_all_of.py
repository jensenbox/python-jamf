# coding: utf-8

"""
    Jamf Pro API

    ## Overview This is a sample Jamf Pro server which allows for usage without any authentication. The Jamf Pro environment which supports the Try it Out functionality does not run the current beta version of Jamf Pro, thus any newly added endpoints will result in an error and should be used soley for documentation purposes.   # noqa: E501

    The version of the OpenAPI document: 10.25.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from jamf.configuration import Configuration


class GetComputerPrestageV2AllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'profile_uuid': 'str',
        'site_id': 'str',
        'version_lock': 'int'
    }

    attribute_map = {
        'id': 'id',
        'profile_uuid': 'profileUuid',
        'site_id': 'siteId',
        'version_lock': 'versionLock'
    }

    def __init__(self, id=None, profile_uuid=None, site_id=None, version_lock=None, local_vars_configuration=None):  # noqa: E501
        """GetComputerPrestageV2AllOf - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._profile_uuid = None
        self._site_id = None
        self._version_lock = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if profile_uuid is not None:
            self.profile_uuid = profile_uuid
        if site_id is not None:
            self.site_id = site_id
        if version_lock is not None:
            self.version_lock = version_lock

    @property
    def id(self):
        """Gets the id of this GetComputerPrestageV2AllOf.  # noqa: E501


        :return: The id of this GetComputerPrestageV2AllOf.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetComputerPrestageV2AllOf.


        :param id: The id of this GetComputerPrestageV2AllOf.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def profile_uuid(self):
        """Gets the profile_uuid of this GetComputerPrestageV2AllOf.  # noqa: E501


        :return: The profile_uuid of this GetComputerPrestageV2AllOf.  # noqa: E501
        :rtype: str
        """
        return self._profile_uuid

    @profile_uuid.setter
    def profile_uuid(self, profile_uuid):
        """Sets the profile_uuid of this GetComputerPrestageV2AllOf.


        :param profile_uuid: The profile_uuid of this GetComputerPrestageV2AllOf.  # noqa: E501
        :type profile_uuid: str
        """

        self._profile_uuid = profile_uuid

    @property
    def site_id(self):
        """Gets the site_id of this GetComputerPrestageV2AllOf.  # noqa: E501


        :return: The site_id of this GetComputerPrestageV2AllOf.  # noqa: E501
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this GetComputerPrestageV2AllOf.


        :param site_id: The site_id of this GetComputerPrestageV2AllOf.  # noqa: E501
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def version_lock(self):
        """Gets the version_lock of this GetComputerPrestageV2AllOf.  # noqa: E501


        :return: The version_lock of this GetComputerPrestageV2AllOf.  # noqa: E501
        :rtype: int
        """
        return self._version_lock

    @version_lock.setter
    def version_lock(self, version_lock):
        """Sets the version_lock of this GetComputerPrestageV2AllOf.


        :param version_lock: The version_lock of this GetComputerPrestageV2AllOf.  # noqa: E501
        :type version_lock: int
        """

        self._version_lock = version_lock

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetComputerPrestageV2AllOf):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetComputerPrestageV2AllOf):
            return True

        return self.to_dict() != other.to_dict()
